# -*- coding: utf-8 -*-
"""A00833115_Entrega3Proyecto.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dH4iW7Dd88ltCen2txBu8rgC3nzHuSIU

# Entrega etapa 3 del proyecto integrador

Ángel Gael García Rangel A00833115

Domingo 17 de octubre de 2021

Link: https://colab.research.google.com/drive/1dH4iW7Dd88ltCen2txBu8rgC3nzHuSIU?usp=sharing

**Problemática y solución:**
 El objetivo número 5 de desarrollo sostenible "Educación de calidad", surge de la falta de una educación íntegra alrededor del mundo. Esto se ha visto reflejado en los resultados de la prueba PISA, en la cual en los últimos años particularmente México ha obtenido malos resultados, demostrando la necesidad de reforzar conceptos educativos básicos. Ante ello, este código plantea solucionar dicha problemática creando un programa que registre preguntas de las distintas categorías de la prueba PISA, mismas que puedan actualizarse. Al poder estudiar dichas preguntas y tomar quizzes en las cuales vengan las mismas, los estudiantes que utilicen el programa podrán adquirir conocimiento real sobre las áreas básicas de la educación (Matemáticas, Lectura y Ciencias). Con ello se planea, no solo obtener mejores resultados en la prueba PISA, sino verdaderamente ser una ayuda para cada vez ser un mundo con una educación de mayor calidad. En cuanto a aspectos técnicos, el programa primeramente tendrá una función main() que contendrá la llamada a todas las demás funciones. La primera de ellas será menu(), la cual se encarga de, mediante múltiples "prints" e "input", presentar un menú de distintas opciones con las que cuenta el usuario, tales como dar de altas preguntas de la prueba PISA, actualizar dichas preguntas, estudiar las mismas, presentar un quiz en el que se encuentran, acceder a un reporte de calificaciones o simplemente salir. La opción que seleccione, excepto por "salir", redigirá a una función con la tarea de realizar dicha opción. La función "dar de alta preguntas", establecerá todas las preguntas con sus respectivas respuestas en una lista (o existe la opción de en un diccionario). Después la opción "actualizar las preguntas", modificará la lista (o diccionario) estableciod. La opción "estudiar las preguntas", simplemente hará múltiples "prints" (con la ayuda de un ciclo", para mostrar todas las preguntas y respuestas guardadas en la lista o diccionario. La opción de "presentar un quiz", utilizará principalmente ciclos while y condicionales para verificar si las respuestas que coloque el usuario corresponden con las verdaderas. Por último, la opción "reportar calificaciones" simplemente mostrará un conteo de una lista de calificaciones con resultados previamente establecidos por la función anterior. El menú estará dentro de un ciclo while para que si el usuario selecciona la última opción "salir", se salga del ciclo con un "break".

## Algoritmos necesarios

**Alta de pregunta (def registrar_pregunta)**


1.   Crear una variable llamada "contador" y asignarle el valor 0.
2.   Iniciar un ciclo while que se repita una cantidad indefinida de veces (while True).
3.   Crear una variable llamada pregunta_o_no y asignarle un input que pregunte al usuario si quiere agregar una pregunta (SI) o no quiere (NO).
4.   Agregar un condicional para que si la variable pregunta_o_no sea NO, salir del ciclo mediante un break y si es SI, seguir con las instrucciones.
5.   Crear una variable llamada "lista" y asignarle el valor [].
6.   Crear una variable llamada "materia" y asignarle el valor "".
7.   Crear una variable llamada "pregunta" y asignarle el valor "".
8.   Sumarle 1 a la variable contador y agregar la variable "contador" a la lista (lista.append(contador)).
9.   Pedir que el usuario ingrese la materia sobre la que será la pregunta y eso guardarlo en la variable "materia".
10. Agregar la variable "materia" a la lista (lista.append(materia)).
11.   Pedir que el usuario ingrese la pregunta a registrar (input).
(pregunta = input()) y eso guardarlo en la variable "pregunta".
12.   Agregar la variable "pregunta" a la lista (lista.append(pregunta)).
13.   Iniciar un ciclo for que se repita 5 veces (for i in range(5)).
14.   Crear una variable llamada respuesta que sea igual a "".
15.   Agregar una condicional, si i es menor o igual a 3 se asignará a la variable "respuesta" lo que el usuario ingrese como respuesta (respuesta = input()).
16.   Se agrega a la lista la variable "respuesta" (lista.append(respuesta)).
17.  Si i es igual a 4, se asignará a la variable respuesta lo que el usuario ingrese como respuesta correcta (respuesta = input()).
18.  Se agrega a la lista la variable respuesta (lista.append(respuesta)).
19. Agregar la lista creada a la lista general del programa que previamente se creó fuera de la variable (lista_general.append(lista)).
20. Agregar un "continue" para que vuelva a iniciar el ciclo while.

**Actualizar preguntas (def actualizar_pregunta)**
1. Iniciar un ciclo while que se repita una cantidad indefinida de veces (while True).
2. Crear una variable llamada actualizar_o_no y asignarle un input que pregunte al usuario si quiere agregar una pregunta (SI) o no quiere (NO).
3. Agregar un condicional para que si la variable actualizar_o_no sea NO, salir del ciclo mediante un break y si es SI, seguir con las instrucciones.
4. Crear una variable llamada "id" que tenga el valor 0
5. Iniciar un ciclo for que tenga como rango el tamaño de la lista de preguntas (for i in range(len(lista_general)))
6. Desplegar mediante un print, cada una de las preguntas en la lista de preguntas, con su respectivo id.
7. Una vez terminado el ciclo for, asignarle a la variable "id" el número que el usuario ingrese en un input.
8. Crear una variable llamada encontrada que sea igual a False
9. Crear un ciclo for que recorra toda la lista de preguntas.
10. Si el primer elemento de la lista en la lista de preguntas es igual a la variable id, se mostrará mediante un print todos los elementos de dicha lista y la variable encontrada cambiará a True.
11. Si la variable encontrada al terminar el ciclo for es igual a False, deberá mostrar mediante un print "No se ingresó un id correcto" y darle un continue para que vuelve a comenzar el ciclo while.
12. Crear una variable llamada "materia" que sea igual a la lista en su indice 1.
13. Crear una variable llamada "pregunta" que sea igual a la lista en su indice 2.
14. Crear una variable llamada "respuesta1" que sea igual a la lista en su indice 3.
15. Crear una variable llamada "respuesta2" que sea igual a la lista en su indice 4.
16. Crear una variable llamada "respuesta3" que sea igual a la lista en su indice 5.
17. Crear una variable llamada "respuesta4" que sea igual a la lista en su indice 6.
18. Crear una variable llamada "respuesta_correcta" que sea igual a la lista en su indice 7.
19. Crear una variable llamada "materia_provisional".
21. La variable "materia provisional" será igual a lo que el usuario ingrese como input.
22. Mediante una condicional, revisar si "materia_provisional" es igual a "", si lo es simplemente se usa un continue para seguir con el ciclo for.
23. Si "materia_provisional" es distinta a "", se reescribirá la variable "materia" por "materia_provisional".
24. Creae una variable llamada "pregunta_provisional".
25. La variable "pregunta_provisional" será igual a lo que el usuario ingrese como input.
26. Mediante una condicional, revisar si "pregunta_provisional" es igual a "", si lo es simplemente se usa un continue para seguir con el ciclo for.
27. Si "pregunta_provisional" es distinta a "", se reescribirá la variable "pregunta" por "pregunta_provisional".
28. Crear una variable llamada "respuesta1_provisional".
29. La variable "respuesta1_provisional" será igual a lo que el usuario ingrese como input.
30. Mediante una condicional, revisar si "respuesta1_provisional" es igual a "", si lo es simplemente se usa un continue para seguir con el ciclo for.
31. Si "respuesta1_provisional" es distinta a "", se reescribirá la variable "respuesta1" por "respuesta1_provisional".
32. Crear una variable llamada "respuesta2_provisional".
33. La variable "respuesta2_provisional" será igual a lo que el usuario ingrese como input.
34. Mediante una condicional, revisar si "respuesta2_provisional" es igual a "", si lo es simplemente se usa un continue para seguir con el ciclo for.
35. Si "respuesta2_provisional" es distinta a "", se reescribirá la variable "respuesta2" por "respuesta2_provisional".
36. Creae una variable llamada "respuesta3_provisional".
37. La variable "respuesta3_provisional" será igual a lo que el usuario ingrese como input.
38. Mediante una condicional, revisar si "respuesta3_provisional" es igual a "", si lo es simplemente se usa un continue para seguir con el ciclo for.
39. Si "respuesta3_provisional" es distinta a "", se reescribirá la variable "respuesta3" por "respuesta3_provisional".
40. Crear una variable llamada "respuesta4_provisional".
41. La variable "respuesta4_provisional" será igual a lo que el usuario ingrese como input.
42. Mediante una condicional, revisar si "respuesta4_provisional" es igual a "", si lo es simplemente se usa un continue para seguir con el ciclo for.
43. Si "respuesta4_provisional" es distinta a "", se reescribirá la variable "respuesta4" por "respuesta4_provisional".
44. Creae una variable llamada "respuesta_correcta_provisional".
45. La variable "respuesta_correcta_provisional" será igual a lo que el usuario ingrese como input.
46. Mediante una condicional, revisar si "respuesta_correcta_provisional" es igual a "", si lo es simplemente se usa un continue para seguir con el ciclo for.
47. Si "respuesta_correcta_provisional" es distinta a "", se reescribirá la variable "respuesta_correcta" por "respuesta_correcta_provisional".
48. Ya fuera del ciclo for, se mostrará mediante un print toda la nueva información que el usuario ingresó.
49. Se crea una variable llamada "actualizar2_o_no".
50. Asignarle a la variable "actualizar2_o_no" un input que pregunte si el usuario está seguro (SI) o no (NO), de actualizar la pregunta.
51. Mediante condicionales, en caso de que no quiera actualizar la pregunta, se dará simplemente un continue para iniciar de nuevo el ciclo while.
52. En caso de que quiera actualizar la pregunta, se sigue con las siguientes instrucciones.
53. Se sobreescriben el elemento de la lista con el id seleccionado con los nuevos valores ingresados. 
**Estudiar preguntas (def estudiar_area)**
1. Iniciar un ciclo while que se repita una cantidad indefinidad de veces.
2. Crear una variable llamada "estudiar_o_no", la cual sea igual a si el usuario quiere estudiar las preguntas de una materia (sí) o no (no).
3. Si "estudiar_o_no" es igual a no, se saldrá del ciclo, de lo contrario seguirá con las siguientes instrucciones.
4. Se creará la variable "materia", la cual será igual a la materia que el usuaro quiera estudiar.
5. Se creará una variable llamada "materia_existente", la cual será igual a False.
6. Se creará una variable llamada "cantidad_preguntas", la cual será igual a 0.
7. Mediante un ciclo for se recorrerá la lista principal del programa.
8. Si el elemento con indice 1 de una de las listas de la lista principal del programa es igual a la variable materia, la variable "materia_existente" cambiará a True y se le sumará uno a la variable "cantidad_preguntas"
9. Si la variable "materia_existente" al terminar el ciclo es igual a False, se desplegará "la materia introducidad no existe" y se colocará un continue para seguir con el programa.
10. Por el contrario, si la variable "materia_existente" es True, se seguirá con las siguientes instrucciones.
11. Se creará una variable llamada "numero_preguntas", la cual será igual a la cantidad de preguntas que el usuario quiera estudiar.
12. Si la variable número de preguntas es mayor a la variable "cantidad_preguntas", se desplegará el mensaje "No hay suficientes preguntas, pero te mostraremos las que tenemos de esa materia" y la variable "numero_preguntas" ahora tendrá el valor "cantidad_preguntas"
13. Se creará un contador con valor 0
14. Se creará un ciclo while con la condición de que contador sea igual o menor a numero_preguntas.
15. Dentro del ciclo while habrá un ciclo for que recorra toda la lista principal.
16. Si encuentra una lista dentro de la lista principal que tenga en su indice 1, el mismo valor que la variable "materia", se hará un print de todos los elementos de dicha lista y se sumará un 1 al contador.
**Presentar un Quiz def presentar_Quiz**
1. Crear un ciclo while que se esté repitiendo un número indefinido de veces.
2. Crear una variable llamada "presentar_o_no" que sea igual a el input de si el usuario quiere presentar (sí) o no (no) el quiz.
3. Si "presentar_ no" es igual a no, se hará un break, por el contario se seguirá con las siguientes instrucciones.
3. Crear una lista llamada "preguntas_quiz", que tenga las preguntas que se contestarán.
4. Crear un contador con valor 4.
5. Iniciar un ciclo while con la condición de que contador sea mayor a 0.
6. Colocar un ciclo for dentro del ciclo while que recorra toda la lista principal.
7. Si encuentra una lista dentro de la lista principal que tenga en su indice 1 la palabra "Matemáticas", agregará toda la lista a la lista "preguntas_quiz" y le restará uno al contador.
8. Cuando termine el ciclo se pone que el contador vuelva a ser 4
9. Iniciar un ciclo while con la condición de que contador sea mayor a 0.
10. Colocar un ciclo for dentro del ciclo while que recorra toda la lista principal.
11. Si encuentra una lista dentro de la lista principal que tenga en su indice 1 la palabra "Lectura", agregará toda la lista a la lista "preguntas_quiz" y le restará uno al contador.
12. Cuando termine el ciclo se pone que el contador ahora sea 2
13. Iniciar un ciclo while con la condición de que contador sea mayor a 0.
14. Colocar un ciclo for dentro del ciclo while que recorra toda la lista principal.
15. Si encuentra una lista dentro de la lista principal que tenga en su indice 1 la palabra "Ciencias", agregará toda la lista a la lista "preguntas_quiz" y le restará uno al contador.
16. Crear una variable llamada respuestas_correctas_quiz
17. Crear una variable llamada respuestas_incorrectas_quiz
18. Iniciar el tiempo
19. Imprimir "a partir de este punto tiene 20 minutos para realizar el quiz"
20. Sumarle uno a la variable de cantidad de usuarios.
21. Iniciar un ciclo for que recorra toda la lista "preguntas_quiz"
22. Verificar si el tiempo no ha sobrepasado los 20 minutos, si es así decir "se acabo el tiempo" y dar un break.
23. Darle un print a la pregunta y las 4 posibles respuestas de cada una de la listas de  "preguntas_quiz"
24. Pedir la respuesta y guardarlo en la variable "respuesta".
25. Verificar si respuesta coincide con el indice de la lista en donde se encuentra la respuesta correcta.
26. Si coincide se despliega "respuesta correcta" y se suma uno a la variable de respuestas correctas.
27. Si no coincide se despliega "respuesta incorrecta" y se suma uno a las respuestas incorrectas.
28. Se crea la variable "calificación_quiz", la cual será igual a las respuestas correctas por 10.
29. Imprimir el número de respuestas correctas y el número de respuestas incorrectas, así como la calificación.
30. Se suman las respuestas correctas del quiz a las respuestas correctas globales.
31. Se suman las respuestas incorrectas del quiz a las respuestas incorrectas globales.
32. Se suma la calificación del quiz a la suma de calificaciones globales.
**Reportar calificaciones def reportar_calificaciones**
1. Mostrar mediante un print "Reporte de calificaciones"
2. Mostrar mediante un print la cantidad de usuarios
3. Crear una variable llamada promedio que sea igual a dividir "suma_calificaciones" entre usuarios
4. Mostrar mediante un print el promedio de calificaciones
5. Mostrar mediante un print la cantidad total de respuestas correctas
6. Mostrar mediante un print la cantidad total de respuestas incorrectas
**Mostrar menú**
1. Iniciar un ciclo while que se repita una cantidad indefinida de veces.
2. Llamar a la función menú, la cual se encarga de desplegar todas las opciones y retorna el input de la opción del usuario.
3. Guardar lo que retorna la función menú en una variable llamada opción.
4. Si la variable opcion es igual a 1, llamar a la función registrar_pregunta.
5. Si la variable opción es igual a 2, llamar a la función actualizar_preguntas.
6. Si la variable opción es igual a 3, llamar a la función estudiar_preguntas.
7. Si la variable opción es igual a 4, llamar a la función presentar_quiz.
8. Si la variable opción es igual a 5, llamar a la función reportar_calificaicones.
9. Si la variable opción es igual a 6, dar un break para salir del ciclo.
"""

#PROYECTO INTEGRADOR

#Importar librerías
import time
import os
#Establecimiento variables
lista_main = []
archivo_nombre = "preguntas_prueba_pisa.txt"
contador = 0
usuarios = 0
respuestas_correctas = 0
respuestas_incorrectas = 0
suma_calificaciones = 0
#Establecimiento de funciones
def leer_archivo(nombre):
  with open(nombre, "r") as archivo:
    global lista_main
    lista_main = []
    contenido = archivo.readlines()
    for elemento in contenido:
      linea = elemento.split(",")
      linea[7] = linea[7][:-1]
      lista_main.append(linea)
    return lista_main

def grabar_archivo(nombre, lista):
  with open(nombre, "w") as archivo:
    for elemento in lista:
      elemento[0] = str(elemento[0])
      texto = ",".join(elemento)
      archivo.write(texto + "\n")
def registrar_preguntas():
  global contador
  print("-----ESTA ES LA FUNCIÓN REGISTRAR PREGUNTAS-----")
  while True:
    pregunta_o_no = int(input("¿Quieres agregar una pregunta? (Sí = 1, No = 0): "))
    if pregunta_o_no == 1:
      lista = []
      materia = ""
      pregunta = ""
      contador = contador + 1
      lista.append(contador)
      materia = input("Ingrese la materia sobre la que será la pregunta: ")
      lista.append(materia)
      pregunta = input("Ingrese la pregunta: ")
      lista.append(pregunta)
      for i in range(5):
        respuesta = ""
        if i <= 3:
          respuesta = input(f"Ingresa la opción de respuesta {i + 1}: ")
          lista.append(respuesta)
        elif i == 4:
          respuesta = input(f"Ingresa la respuesta correcta: ")
          lista.append(respuesta)
      lista_main.append(lista)
      grabar_archivo(archivo_nombre, lista_main)

      continue

    elif pregunta_o_no == 0:
      break
    else:
      print("Ingrese una respuesta válida.")
      continue

def menu():
  print("1.Alta de preguntas de prueba PISA (lectura, matemáticas, ciencias)")
  print("2.Actualizar preguntas de la prueba PISA (lectura, matemáticas, ciencias)")
  print("3.Estudiar preguntas de cierta área (lectura, matemáticas, ciencias)")
  print("4.Presentar un quiz (lectura, matemáticas, ciencias)")
  print("5.Reporte de calificaciones")
  print("6.Salir")
  opcion = int(input("Ingresa la opción por su número (1, 2, 3, 4, 5 o 6): "))
  return opcion
def actualizar_preguntas():
  lista_main = leer_archivo(archivo_nombre)
  print("-----ESTA ES LA FUNCIÓN ACTUALIZAR PREGUNTAS-----")
  while True:
    actualizar_o_no = int(input("¿Quieres actualizar una pregunta? (Sí = 1, No = 0: )"))
    if actualizar_o_no == 1:
      id = 0
      for i in range(len(lista_main)):
        print(f"{lista_main[i][0]}) {lista_main[i][2]}")
      id = input("Ingrese el id de la pregunta que desea cambiar: ")
      encontrada =  False
      for i in range(len(lista_main)):
        if lista_main[i][0]  == id:
          encontrada = True
          print(f"{lista_main[(i)][0]}) {lista_main[(i)][2]} \n a) {lista_main[(i)][3]} \n b) {lista_main[(i)][4]} \n c){lista_main[(i)][5]} \n d) {lista_main[(i)][6]} \n Respuesta correcta: {lista_main[(i)][7]} ")
          
      if encontrada == False:
        print("Se ingresó un id incorrecto")
        continue
      materia = lista_main[int(id) - 1][1]
      pregunta = lista_main[int(id) - 1][2]
      respuesta1 = lista_main[int(id) - 1][3]
      respuesta2 = lista_main[int(id) - 1][4]
      respuesta3 = lista_main[int(id) - 1][5]
      respuesta4 = lista_main[int(id) - 1][6]
      respuestacorrecta = lista_main[int(id) - 1][7]
      materiaprovisional = ""
      materiaprovisional = input("Ingresa la materia por la que quieres actualizarla (da enter si no quieres cambiar): ")
      if materiaprovisional != "":
        materia = materiaprovisional
      preguntaprovisional = input("Ingresa la pregunta por la que quieres actualizarla (da enter si no quieres cambiar): ")
      if preguntaprovisional != "":
        pregunta = preguntaprovisional
      respuesta1provisional = ""
      respuesta1provisional = input("Ingresa la actualización que harás a la primera respuesta (da enter si no quieres cambiar): ")
      if respuesta1provisional != "":
        respuesta1 = respuesta1provisional
      respuesta2provisional = ""
      respuesta2provisional = input("Ingresa la actualización que harás a la segunda respuesta (da enter si no quieres cambiar): ")
      if respuesta2provisional != "":
        respuesta2 = respuesta2provisional     
      respuesta3provisional = ""
      respuesta3provisional = input("Ingresa la actualización que harás a la tercera respuesta (da enter si no quieres cambiar): ")
      if respuesta3provisional != "":
        respuesta3 = respuesta3provisional    
      respuesta4provisional = ""
      respuesta4provisional = input("Ingresa la actualización que harás a la cuarta respuesta (da enter si no quieres cambiar): ")
      if respuesta4provisional != "":
        respuesta4 = respuesta4provisional
      respuesta_correcta_provisional = ""
      respuesta_correcta_provisional = input("Ingresa la actualización que harás a la respuesta correcta (da enter si no quieres cambiar): ")
      if respuesta_correcta_provisional != "":
        respuestacorrecta = respuesta_correcta_provisional
      print(f"{id}) {pregunta} \n a) {respuesta1} \n b) {respuesta2} \n c) {respuesta3} \n b) {respuesta4} \n Respuesta correcta: {respuestacorrecta}")     
      actualizar2_o_no = int(input("¿Estás seguro de quieres actualizar la lista existente por la antes mostrada? Sí = 1, No= 0"))
      if actualizar2_o_no == 1:
        lista_main[int(id) - 1][1] = materia
        lista_main[int(id) - 1][2] = pregunta
        lista_main[int(id) - 1][3] = respuesta1
        lista_main[int(id) - 1][4] = respuesta2
        lista_main[int(id) - 1][5] = respuesta3
        lista_main[int(id) - 1][6] = respuesta4
        lista_main[int(id) - 1][7] = respuestacorrecta
      elif actualizar2_o_no == 0:
        print("Entendido, la lista seguirá igual")
        continue
      else:
        print("No se ingresó una respuesta correcta")
        continue

    elif actualizar_o_no == 0:
      break
    else:
      print("Ingresa una respuesta válida.")
      continue
    grabar_archivo(archivo_nombre, lista_main)
def estudiar_area():
  lista_main = leer_archivo(archivo_nombre)
  print("-----ESTA ES LA FUNCIÓN ESTUDIAR AREA-----")
  while True:
    estudiar_o_no = int(input("¿Quieres estudiar un área? (sí = 1, no=  0)"))
    if estudiar_o_no == 1:
      materia = input("Ingresa la materia que quieres estudiar: ")
      materia_existente = False
      cantidad_preguntas = 0
      for i in range(len(lista_main)):
        if lista_main[i][1] == materia:
          cantidad_preguntas = cantidad_preguntas + 1
          materia_existente = True
      if materia_existente == False:
        print("La materia que se ingresó no es correcta")
        continue
      elif materia_existente == True:
        numero_preguntas = int(input("Ingresa la cantidad de preguntas que deseas estudiar: "))
        if numero_preguntas > cantidad_preguntas:
          print("Te mostraremos menos preguntas de las que pides, pues no tenemos tantas de dicha materia")
          numero_preguntas = cantidad_preguntas
        contador = 1
        while contador <= numero_preguntas:
          for i in range(len(lista_main)):
            if lista_main[i][1] == materia:
              print(f"{lista_main[i][0]}) {lista_main[i][2]} \n a){lista_main[i][3]} \n b){lista_main[i][4]} \n c){lista_main[i][5]} \n d){lista_main[i][6]} \n Respuesta correcta: {lista_main[i][7]}")
              contador = contador + 1
    elif estudiar_o_no == 0:
      break
    else:
      print("No ingresaste una respuesta válida")
      continue
def presentar_quiz():
  lista_main = leer_archivo(archivo_nombre)
  global usuarios, respuestas_correctas, respuestas_incorrectas, suma_calificaciones
  print("-----ESTA ES LA FUNCIÓN PRESENTAR QUIZ-----")
  while True:
    presentar_o_no = int(input("¿Quieres presentar un quiz? (sí = 1, no = 0)"))
    if presentar_o_no == 0:
      break
    elif presentar_o_no == 1:
      preguntas_quiz = []
      contador = 4
      while contador > 0:
        for i in range(len(lista_main)):
          if lista_main[i][1] == "Matemáticas":
            preguntas_quiz.append(lista_main[i])
            contador = contador - 1
      contador = 4
      while contador > 0:
        for i in range(len(lista_main)):
          if lista_main[i][1] == "Lectura":
            preguntas_quiz.append(lista_main[i])
            contador = contador - 1
      contador = 2
      while contador > 0:
        for i in range(len(lista_main)):
          if lista_main[i][1] == "Ciencias":
            preguntas_quiz.append(lista_main[i])
            contador = contador - 1
      respuestas_correctas_quiz = 0
      respuestas_incorrectas_quiz = 0
      inicio = time.time()
      print("A partir de este momento tienes 20 minutos para realizar el Quiz")
      usuarios = usuarios + 1
      for i in range(len(preguntas_quiz)):
        final = time.time()
        if final - inicio > 1200:
          print("Se acabó tu tiempo")
          break
        else:
          print(f"{preguntas_quiz[i][1]} \n {preguntas_quiz[i][0]}) {preguntas_quiz[i][2]} \n a) {preguntas_quiz[i][3]} \n b) {preguntas_quiz[i][4]} \n c) {preguntas_quiz[i][5]} \n d) {preguntas_quiz[i][6]}")
          respuesta = input("Ingresa la respuesta: ")
          if respuesta == str(preguntas_quiz[i][7]):
            print("RESPUESTA CORRECTA, FELICIDADES")
            respuestas_correctas_quiz = respuestas_correctas_quiz + 1
          else:
            print("RESPUESTA INCORRECTA, PERO NO TE PREOCUPES")
            respuestas_incorrectas_quiz = respuestas_incorrectas_quiz + 1
      calificacion = respuestas_correctas_quiz * 10
      print(f"Tus resultados: \n Respuestas correctas: {respuestas_correctas_quiz} \n Respuestas incorrectas: {respuestas_incorrectas_quiz} \n Calificacion: {calificacion}")
      respuestas_correctas = respuestas_correctas + respuestas_correctas_quiz
      respuestas_incorrectas = respuestas_incorrectas + respuestas_incorrectas_quiz
      suma_calificaciones = suma_calificaciones + calificacion            
    else:
      print("Introduciste un valor no válido")
      continue
def reportar_calificaciones():
  global usuarios, respuestas_correctas, respuestas_incorrectas, suma_calificaciones
  print("----- ESTA ES LA FUNCIÓN REPORTAR CALIFICACIONES-----")
  print(f"Usuarios: {usuarios}")
  promedio = suma_calificaciones / usuarios
  print(f"Promedio de calificaciones: {promedio}")
  print(f"Respuestas correctas: {respuestas_correctas} \n Respuestas incorrectas: {respuestas_incorrectas}")
  with open("preguntas_prueba_pisa.txt", "a") as archivo:
    archivo.write(f"Usuarios: {usuarios} \n Promedio de calificaciones: {promedio} \n Respuestas correctas: {respuestas_correctas} \n Respuestas incorrectas: {respuestas_incorrectas}")
def main():
  while True:
    opcion_escogida = menu()
    if opcion_escogida == 1:
      print(registrar_preguntas())
      break
    elif opcion_escogida == 2:
      print(actualizar_preguntas())
      break
    elif opcion_escogida == 3:
      print(estudiar_area())
      break
    elif opcion_escogida == 4:
      print(presentar_quiz())
      break
    elif opcion_escogida == 5:
      print(reportar_calificaciones())
      break
    elif opcion_escogida == 6:
      break
    else:
      print("Opción incorrecta")
      break

#Programa principal
while True:
  seguir_o_no = int(input("¿Quieres seguir con el programa? (Sí = 1, No = 0): " ))
  if seguir_o_no == 1:
    main()
  elif seguir_o_no == 0:
    print("Entendido, gracias por usar nuestro programa.")
    break
  else:
    print("Ingresa una respuesta válida")
    continue